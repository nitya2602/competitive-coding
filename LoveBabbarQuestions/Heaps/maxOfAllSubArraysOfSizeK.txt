//O(N) time complexity and O(k) space

class Solution
{
  public:
    //Function to find maximum of each subarray of size k.
    vector <int> max_of_subarrays(int *arr, int n, int k)
    {
        // your code here
        deque<int> q(k);
        vector<int> ans;
        int i;
        for(i = 0; i < k; i++)
        {
            while(!q.empty() && arr[i] >= arr[q.back()])
                q.pop_back();
            q.push_back(i);
        }
        for(; i < n; i++)
        {
            ans.push_back(arr[q.front()]);
            while(!q.empty() && q.front() <= i-k)
            {
                q.pop_front();
            }
            while(!q.empty() && arr[q.back()] <= arr[i])
                q.pop_back();
            q.push_back(i);
        }
        ans.push_back(arr[q.front()]);
        return ans;
    }
};