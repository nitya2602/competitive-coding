class Solution{
public:
    int subsetSum(int arr[], int n, int sum)
    {
        int dp[n+1][sum+1];
        for(int i = 0; i <= n; i++)
        {
            for(int j = 0; j <= sum; j++)
            {
                if(j == 0)
                    dp[i][j] = 1;
                else if(i == 0 && j != 0)
                    dp[i][j] = 0;
                else if(arr[i-1] > j)
                {
                    dp[i][j] = dp[i-1][j];
                }
                else if(j >= arr[i-1])
                {
                    dp[i][j] = dp[i-1][j-arr[i-1]] || dp[i-1][j];
                }
            }
        }
        return dp[n][sum];
    }
    int equalPartition(int N, int arr[])
    {
        // code here
        int sum = 0;
        for(int i = 0; i < N; i++)
        {
            sum += arr[i];
        }
        //cout<<sum<<" ";
        if(sum%2 != 0)
            return 0;
        return subsetSum(arr, N, sum/2);
    }
};