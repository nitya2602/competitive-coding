class Solution 
{
    public:
	//Function to return a list containing the DFS traversal of the graph.
	void dfs(vector<int> adj[], vector<bool> &visited, vector<int> &ans, int u)
	{
	    visited[u] = true;
	    ans.push_back(u);
	    for(int i = 0; i < adj[u].size(); i++)
	    {
	        if(!visited[adj[u][i]])
	        {
	            dfs(adj, visited, ans, adj[u][i]);
	        }
	    }
	}
	vector<int>dfsOfGraph(int V, vector<int> adj[])
	{
	    // Code here
	    vector<bool> visited(V, false);
	    vector<int> ans;
	    for(int i = 0; i < V; i++)
	    {
	        if(!visited[i])
	        {
	            dfs(adj, visited, ans, i);
	        }
	    }
	    return ans;
	}
};