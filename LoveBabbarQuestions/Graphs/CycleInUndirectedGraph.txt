class Solution 
{
    public:
    //Function to detect cycle in an undirected graph.
    bool dfs(vector<int> adj[], vector<bool> &visited, int u, int parent)
    {
        visited[u] = true;
        for(int i : adj[u])
        {
            if(!visited[i])
            {
                if(dfs(adj, visited, i, u))
                    return true;
            }
            else
            {
                if(i != parent) return true;
            }
        }
        return false;
    }
	bool isCycle(int V, vector<int>adj[])
	{
	    // Code here
	    vector<bool> visited(V, false);
	    for(int i = 0; i < V; i++)
	    {
	        if(!visited[i])
	        {
	            if(dfs(adj, visited, i, -1))
	                return true;
	        }
	    }
	    return false;
	}
};
