//need to maintain both level and horizontal distance

class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    void preorder(Node* root, map<int, pair<int, int>> &map, int distance, int level)
    {
        if(root == NULL) return;
        if(map.find(distance) == map.end() || map[distance].second > level)
        {
            map[distance] = make_pair(root -> data, level);
        }
        preorder(root -> left, map, distance-1, level+1);
        preorder(root -> right, map, distance+1, level+1);
    }
    vector<int> topView(Node *root)
    {
        //Your code here
        map<int, pair<int, int>> map;
        vector<int> ans;
        preorder(root, map, 0, 1);
        for(auto i : map)
        {
            ans.push_back(i.second.first);
        }
        return ans;
    }

};
