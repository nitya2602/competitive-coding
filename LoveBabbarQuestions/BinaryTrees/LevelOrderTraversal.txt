/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
void preorder(TreeNode* root, int level, map<int, vector<int>> &map)
{
    if(root == NULL)
        return;
    map[level].push_back(root -> val);
    preorder(root -> left, level+1, map);
    preorder(root -> right, level+1, map);
}
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        queue<TreeNode*> q;
        q.push(root);
        while(!q.empty())
        {
            vector<int> temp;
            int size = q.size();
            for(int i = 0; i < size; i++)
            {
                TreeNode* node = q.front();
                q.pop();
                if(node == NULL) continue;
                temp.push_back(node -> val);
                q.push(node -> left);
                q.push(node -> right);
            }
            if(temp.size() > 0)
                ans.push_back(temp);
        }
        return ans;
    }
};